// t_node	*one;
	// t_node	*two;
	// t_node	*three;

	// one = stack_a->first;
	// two = one->next;
	// three = two->next;
	// if (!three)
	// 	return (ft_swap(stack_a));
	// if (one->data > two->data && two->data < three->data
	// 	&& one->data < three->data)
	// 	return (ft_swap(stack_a));
	// if (one->data > two->data && two->data < three->data
	// 	&& one->data > three->data)
	// 	return (ft_rotate(stack_a));
	// if (one->data < two->data && two->data > three->data
	// 	&& one->data > three->data)
	// 	return (ft_reverse(stack_a));
	// if (one->data > two->data && two->data > three->data)
	// {
	// 	ft_swap(stack_a);
	// 	return (ft_reverse(stack_a));
	// }
	// ft_swap(stack_a);
	// return (ft_rotate(stack_a));
